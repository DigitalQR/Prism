using Prism.Parsing;
using Prism.Reflection.Elements.Cpp;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Prism.Export
{
	public class ReflectionExporter : IReflectionExporter
	{
		/// <summary>
		/// Header text which should be attached to every exported file
		/// </summary>
		private static string s_ExportHeader = @"///////////////////////////////////////////////////////////////////////////////////////////
/// This file contains auto-generated content as exported by the Prism content pipeline ///
///                                                                                     ///
/// DO NOT EDIT THIS FILE                                                               ///
///  Edit the original file and then re-run PrismTool to update this file               ///
///////////////////////////////////////////////////////////////////////////////////////////
";
		private ContentElement m_ReflectedContent;

		public ReflectionExporter(ContentElement content)
		{
			m_ReflectedContent = content;
		}

		/// <summary>
		/// Gernerate all the content for the include
		/// </summary>
		public string GenerateIncludeContent()
		{
			StringBuilder builder = new StringBuilder(s_ExportHeader);
			builder.Append("#pragma once\n");
			builder.Append(m_ReflectedContent.GenerateIncludeContent());
			return ConditionState.PreExpandDirectives(builder.ToString());
		}

		/// <summary>
		/// Gernerate all the content for the source
		/// </summary>
		public string GenerateSourceContent()
		{
			StringBuilder builder = new StringBuilder(s_ExportHeader);
			builder.Append("#include \"" + m_ReflectedContent.FileName + "\"\n");
			builder.Append(m_ReflectedContent.GenerateSourceContent());
			return ConditionState.PreExpandDirectives(builder.ToString());
		}
	}
}
